{"ast":null,"code":"var _jsxFileName = \"/Users/soon/Library/Mobile Documents/com~apple~CloudDocs/goUSA/Courses/25Spring/ADT/Project/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport Admin from \"./pages/Admin\";\nimport Login from \"./pages/Login\";\nimport Logout from \"./pages/Logout\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(() => {\n    return localStorage.getItem(\"isLoggedIn\") === \"true\";\n  });\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [isLoggedIn && /*#__PURE__*/_jsxDEV(Navbar, {\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          setIsLoggedIn: setIsLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          isLoggedIn: isLoggedIn,\n          children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          isLoggedIn: isLoggedIn,\n          children: /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/logout\",\n        element: /*#__PURE__*/_jsxDEV(Logout, {\n          setIsLoggedIn: setIsLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0lj74c48V6LIzZVsl3VprfX4NWg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","Navbar","Home","Admin","Login","Logout","ProtectedRoute","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","localStorage","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","replace","_c","$RefreshReg$"],"sources":["/Users/soon/Library/Mobile Documents/com~apple~CloudDocs/goUSA/Courses/25Spring/ADT/Project/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport Admin from \"./pages/Admin\";\nimport Login from \"./pages/Login\";\nimport Logout from \"./pages/Logout\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(() => {\n    return localStorage.getItem(\"isLoggedIn\") === \"true\";\n  });\n\n  return (\n    <Router>\n      {/* ✅ Show Navbar only if logged in */}\n      {isLoggedIn && <Navbar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />}\n\n      <Routes>\n        {/* ✅ Login route */}\n        <Route path=\"/login\" element={<Login setIsLoggedIn={setIsLoggedIn} />} />\n\n        {/* ✅ Protected routes */}\n        <Route\n          path=\"/home\"\n          element={\n            <ProtectedRoute isLoggedIn={isLoggedIn}>\n              <Home />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/admin\"\n          element={\n            <ProtectedRoute isLoggedIn={isLoggedIn}>\n              <Admin />\n            </ProtectedRoute>\n          }\n        />\n\n        <Route path=\"/logout\" element={<Logout setIsLoggedIn={setIsLoggedIn} />} />\n        <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}